"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6910],{31633:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var s=i(74848),d=i(28453);const r={layout:"default",title:"Advanced Module",parent:"Components",grand_parent:"Libraries",sidebar_position:13},t="Advanced Module",l={id:"libraries/components/advanced",title:"Advanced Module",description:"Features",source:"@site/docs/libraries/components/advanced.md",sourceDirName:"libraries/components",slug:"/libraries/components/advanced",permalink:"/dokku/docs/libraries/components/advanced",draft:!1,unlisted:!1,editUrl:"https://github.com/sinequa/sba-angular/tree/main/docs/libraries/components/advanced.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{layout:"default",title:"Advanced Module",parent:"Components",grand_parent:"Libraries",sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Labels Module",permalink:"/dokku/docs/libraries/components/labels"},next:{title:"Slide Builder Module",permalink:"/dokku/docs/libraries/components/slide-builder"}},o={},a=[{value:"Features",id:"features",level:2},{value:"Import",id:"import",level:2},{value:"Advanced Service",id:"advanced-service",level:2},{value:"Form Validation",id:"form-validation",level:3},{value:"Extras",id:"extras",level:3},{value:"Components",id:"components",level:2},{value:"Directives",id:"directives",level:2},{value:"Sample use case",id:"sample-use-case",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"advanced-module",children:"Advanced Module"}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.p,{children:"This module provides a bench of advanced-search functionalities, as well as components to build custom advanced-search forms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"AdvancedService"}),": manages the different operations that can be used to perform an advanced-search in Sinequa."]}),"\n",(0,s.jsxs)(n.li,{children:["A list of components seen as basic bricks to build a custom advanced-search form . These components are styled with the Bootstrap library, and their class names start with ",(0,s.jsx)(n.code,{children:"Bs"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { BsAdvancedModule } from '@sinequa/components/advanced';\n\n@NgModule({\n  imports: [\n      /*....*/\n      BsAdvancedModule,\n      /*....*/\n  ],\n  /*....*/\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This module is internationalized: If not already the case, you need to import its messages for the language(s) of your application. For example, in your app's ",(0,s.jsx)(n.code,{children:"src/locales/en.ts"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'...\nimport {enAdvanced} from "@sinequa/components/advanced";\n\nconst messages = Utils.merge({}, ..., enAdvanced, appMessages);\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-service",children:"Advanced Service"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AdvancedService"})," exposes a variety of methods and interfaces."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to create your own advanced-search form, you will need to define a list of ",(0,s.jsx)(n.a,{href:"https://angular.io/api/forms/FormControl",children:"FormControl"}),". Here, a set of dedicated methods is provided :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"createSelectControl(field: string, validators?: ValidatorFn[], asyncValidators?: AsyncValidatorFn[]): FormControl"})}),"\n",(0,s.jsxs)(n.p,{children:["This method creates a FormControl dedicated to a standard select. Behind the scenes, this method uses ",(0,s.jsx)(n.strong,{children:"getValue(...)"})," to initialize the value of the returned FormControl."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"createInputControl(field: string, validators?: ValidatorFn[], asyncValidators?: AsyncValidatorFn[]): FormControl"})}),"\n",(0,s.jsxs)(n.p,{children:["This method creates a FormControl dedicated to a standard input. Behind the scenes, this method uses ",(0,s.jsx)(n.strong,{children:"getValue(...)"})," to initialize the value of the returned FormControl."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"createCheckboxControl(field: string, validators?: ValidatorFn[], asyncValidators?: AsyncValidatorFn[]): FormControl"})}),"\n",(0,s.jsxs)(n.p,{children:["This method creates a FormControl dedicated to a standard checkbox. Behind the scenes, this method uses ",(0,s.jsx)(n.strong,{children:"getBooleanValue(...)"})," to initialize the value of the returned FormControl."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"createMultiInputControl(field: string, validators?: ValidatorFn[], asyncValidators?: AsyncValidatorFn[]): FormControl"})}),"\n",(0,s.jsxs)(n.p,{children:["This method creates a FormControl dedicated to an input supporting multi values. Behind the scenes, this method uses ",(0,s.jsx)(n.strong,{children:"getValue(...)"})," to initialize the value of the returned FormControl."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"createRangeControl(field: string, validators?: ValidatorFn[], asyncValidators?: AsyncValidatorFn[]): FormControl"})}),"\n",(0,s.jsxs)(n.p,{children:["This method creates a FormControl dedicated to a custom element supporting a ",(0,s.jsx)(n.strong,{children:"range"})," definition (a coupled elements used as ",(0,s.jsx)(n.strong,{children:"from .. to"})," ). Behind the scenes, this method uses ",(0,s.jsx)(n.strong,{children:"getRangeValue(...)"})," to initialize the value of the returned FormControl."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Notice that the field parameter represents the ",(0,s.jsx)(n.strong,{children:"column / alias"})," to which we are applying our filter."]}),"\n",(0,s.jsx)(n.p,{children:"All above methods invokes the generic helper :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"createControl(value: AdvancedValue | ValueItem | ValueItem[], validators?: ValidatorFn[], asyncValidators?: AsyncValidatorFn[]): FormControl"})}),"\n",(0,s.jsx)(n.p,{children:"This method creates a generic FormControl."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"form-validation",children:"Form Validation"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AdvancedService"})," also enhance the FormControl creation experience with some packaged ",(0,s.jsx)(n.strong,{children:"Validators"})," which can be optionally passed to each one of the above methods."]}),"\n",(0,s.jsxs)(n.p,{children:["Those validators are accessible via the ",(0,s.jsx)(n.strong,{children:"readonly"})," attribute ",(0,s.jsx)(n.code,{children:"advancedFormValidators"})," implementing ",(0,s.jsx)(n.code,{children:"AdvancedFormValidators"})," interface :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"{\n    min: (min: string | number | Date, field: string) => ValidatorFn;\n    max: (max: string | number | Date, field: string) => ValidatorFn;\n    required: ValidatorFn;\n    email: ValidatorFn;\n    pattern: (pattern: string | RegExp) => ValidatorFn;\n    integer: (field: string) => ValidatorFn;\n    number: (field: string) => ValidatorFn;\n    date: (field: string) => ValidatorFn;\n    range: (field: string) => ValidatorFn;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"extras",children:"Extras"}),"\n",(0,s.jsxs)(n.p,{children:["Actually, each created FormControl is not useful unless it is able to perform some related advanced-search lifecycle actions. For this, ",(0,s.jsx)(n.code,{children:"AdvancedService"})," comes with several methods :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"getValue(field: string, query?: Query | undefined): ValueItem | ValueItem[] | undefined"})}),"\n",(0,s.jsx)(n.p,{children:"This method retrieves the value to be set to a specific FormControl (select, input, multi-input ...) from the query."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"getBooleanValue(field: string, query?: Query | undefined): boolean | undefined"})}),"\n",(0,s.jsx)(n.p,{children:"This method retrieves the value to be set to a specific FormControl (checkbox ...) from the query."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"getRangeValue(field: string, query?: Query | undefined): AdvancedValue"})}),"\n",(0,s.jsx)(n.p,{children:"This method retrieves the value to be set to a specific FormControl (range ...) from the query."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"getAdvancedExpr(field: string, query?: Query | undefined): Expr | undefined"})}),"\n",(0,s.jsx)(n.p,{children:"This method returns the expression of an advanced filter from the query."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"getValueFromExpr(expr: Expr): ValueItem | ValueItem[]"})}),"\n",(0,s.jsx)(n.p,{children:"This method extracts the value from the expression."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"setSelect(field: string, value: ValueItem | ValueItem[] | undefined, query?: Query | undefined, combineWithAnd?: boolean): void"})}),"\n",(0,s.jsx)(n.p,{children:"This method updates the query with a value of a specific FormControl (select, input, multi-input ...)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"setBooleanSelect(field: string, value: boolean | undefined, allowFalsy?: boolean, query?: Query | undefined): void"})}),"\n",(0,s.jsx)(n.p,{children:"This method updates the query with a value of a specific FormControl (checkbox ...)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:'setNumericalSelect(field: string, value: string | Date | number | ValueItem | undefined, operator: ">" | ">=" | "<" | "<=" | "=" | "<>", query?: Query | undefined): void'})}),"\n",(0,s.jsx)(n.p,{children:"This method updates the query with a value of a specific FormControl (numeric-input ...)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"setRangeSelect(field: string, range: (string | Date | number)[] | undefined, query?: Query | undefined): void"})}),"\n",(0,s.jsx)(n.p,{children:"This method updates the query with a value of a specific FormControl (range ...)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"setAdvancedSelect(field: string, expr: string | undefined, query?: Query | undefined): void"})}),"\n",(0,s.jsx)(n.p,{children:"This is the helper method which update the select attribute of the query. If no expression provided, the filter of the corresponding field will be entirely removed."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"removeAdvancedValue(field: string, search: boolean, query?: Query | undefined): void"})}),"\n",(0,s.jsx)(n.p,{children:"This method removes a specific advanced value by its field name from a given query and then can trigger a new search event."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"resetAdvancedValues(search: boolean, query?: Query | undefined): void"})}),"\n",(0,s.jsx)(n.p,{children:"This method removes all advanced values from a given query and then can trigger a new search event."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"getAdvancedValues(query?: Query | undefined): Object"})}),"\n",(0,s.jsx)(n.p,{children:"This method returns an object containing all the filled (field, value) in the advanced-search form."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["All above methods use the parameter ",(0,s.jsx)(n.strong,{children:"query"})," as optional. If it is not provided, ",(0,s.jsx)(n.strong,{children:"searchService.query"})," will be used by default."]}),"\n",(0,s.jsxs)(n.p,{children:["Other helpers methods are provided within ",(0,s.jsx)(n.code,{children:"AdvancedService"})," to facilitate custom manipulations of advanced-search feature :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"asValueItems(value: ValueItem | ValueItem[], field: string): ValueItem[]"})}),"\n",(0,s.jsx)(n.p,{children:"This method transforms a given value to a parsed ValueItem[]."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"formatValueItems(field: string, value: ValueItem | ValueItem[]): ValueItem | ValueItem[]"})}),"\n",(0,s.jsx)(n.p,{children:"This method returns a formatted copy of the given value."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"formatAdvancedValue(field: string, value: AdvancedValue): AdvancedValue"})}),"\n",(0,s.jsx)(n.p,{children:"This method returns a formatted copy of the given value."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"castAdvancedValue(value: BaseAdvancedValue, column: CCColumn | undefined): BaseAdvancedValue"})}),"\n",(0,s.jsx)(n.p,{children:"This method cast a given advanced value as per its column definition."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If you want create a new custom component for your advanced-search form, you can, for sure, do it and still be able to benefit of all built-in methods."}),"\n",(0,s.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AdvancedModule"})," has a set of packaged components which serve as a basic bricks of an advanced-search form :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormSelect"})," component is used to display a select element compatible with any advanced-search form."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the component are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"form"}),": The advanced-search form."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"}),": Optional input used to override the default label in the column definition."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"multiple"}),": Whether the multiple selection is allowed or not."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aggregation"}),": Optional input that defines the aggregation name used to fill the select options."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("doc-advanced-form-select",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormInput"})," component is used to display an input element compatible with any advanced-search form."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the component are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"form"}),": The advanced-search form."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"}),": Optional input used to override the default label in the column definition."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"suggestQuery"}),": The string value of the suggest query to be used for the autocomplete."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("doc-advanced-form-input",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormMultiInput"})," component is used to display a multi-value input element compatible with any advanced-search form."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the component are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"form"}),": The advanced-search form."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"}),": Optional input used to override the default label in the column definition."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"suggestQuery"}),": The string value of the suggest query to be used for the autocomplete."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("doc-advanced-form-multi-input",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormRange"})," component is used to display a range input element compatible with any advanced-search form."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the component are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"form"}),": The advanced-search form."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"}),": Optional input used to override the default label in the column definition."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"min"}),": The lowest possible limit."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"max"}),": The highest possible limit."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("doc-advanced-form-range",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormCheckbox"})," component is used to display a checkbox element compatible with any advanced-search form."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the component are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"form"}),": The advanced-search form."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"}),": Optional input used to override the default label in the column definition."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("doc-advanced-form-checkbox",{}),"\n",(0,s.jsx)(n.h2,{id:"directives",children:"Directives"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AdvancedModule"})," embeds its own directives to handle custom features of the advanced-search :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormAutocomplete"})," provides the ",(0,s.jsx)(n.code,{children:"sqAdvancedFormAutocomplete"})," directive. It extends and overrides the main ",(0,s.jsx)(n.code,{children:"sqAutocomplete"})," directive."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the directive are quiet simple :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This directive also emits an ",(0,s.jsx)(n.code,{children:"UpdateItem"})," event which is needed to synchronize the search item in the parent component."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormAutocompleteMultiInput"})," provides the ",(0,s.jsx)(n.code,{children:"sqAdvancedFormAutocompleteMultiInput"})," directive. It extends and overrides ",(0,s.jsx)(n.code,{children:"sqAdvancedFormAutocomplete"})," directive."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the directive are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"items"}),": Initial list of search terms already existing in the advanced search."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This directive also emits an ",(0,s.jsx)(n.code,{children:"itemsUpdate"})," event which is needed to synchronize the search terms in the parent component."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"BsAdvancedFormValidation"})," provides the ",(0,s.jsx)(n.code,{children:"sqAdvancedFormValidation"})," directive. It extends and overrides the main ",(0,s.jsx)(n.code,{children:"sqValidation"})," directive."]}),"\n",(0,s.jsx)(n.p,{children:"The inputs of the directive are :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"field"}),": The column / alias of the applied filter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"validationForm"}),": The advanced-search form."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sample-use-case",children:"Sample use case"}),"\n",(0,s.jsxs)(n.p,{children:["A working example could be the integration of an ",(0,s.jsx)(n.em,{children:"advanced search form"})," in the search form used in ",(0,s.jsx)(n.a,{href:"/dokku/docs/apps/pepper#integrated-search-form",children:"Pepper application"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"In this section, we will go through the main keys of how to easily instantiate an advanced search form :"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"First of all, we need to build the form. The best practice is to create a new component containing all the business logic."}),"\n"]}),"\n",(0,s.jsx)("doc-advanced-form",{}),"\n",(0,s.jsx)(n.p,{children:"The main idea is to start by adding your controls to the form object. Here, you can easily apply validators as much as you want :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"  this.form.addControl('treepath', this.advancedService.createSelectControl('treepath'));\n  this.form.addControl('modified', this.advancedService.createRangeControl('modified',\n    [\n      this.advancedService.validators.range('modified'),\n      this.advancedService.validators.date('modified')\n    ]\n  ));\n  this.form.addControl('person', this.advancedService.createMultiInputControl('person'));\n  this.form.addControl('docformat', this.advancedService.createInputControl('docformat'));\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, we add several FormControl such as ",(0,s.jsx)(n.strong,{children:"modified"}),", to which we apply 2 validators; ",(0,s.jsx)(n.strong,{children:"range()"})," and ",(0,s.jsx)(n.strong,{children:"date()"}),".\nYou can also note that the build process of the form is set in the callback of ",(0,s.jsx)(n.code,{children:"this.firstPageService.getFirstPage()"}),". Its role is to load autocompletion suggestions and whatever data needed in the initialization of advanced-search components.\nYou should ",(0,s.jsx)(n.strong,{children:"carefully"})," notice that the ",(0,s.jsx)(n.strong,{children:"name"})," of each formControl is exactly the ",(0,s.jsx)(n.strong,{children:"same as"})," its ",(0,s.jsx)(n.strong,{children:"field"})," property."]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Next step is to mutually update of the ",(0,s.jsx)(n.strong,{children:"form"})," and the ",(0,s.jsx)(n.strong,{children:"query"})," according to users interactions. This is the role of both methods ",(0,s.jsx)(n.code,{children:"updateFormOnQueryChange()"})," and ",(0,s.jsx)(n.code,{children:"updateQuery()"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Then, feel free to design the look & feel of your advanced search form as you want."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Once the component is ready, you can integrate it in the search form :"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<sq-search-form #searchForm\n  [query]="searchService.query"\n  [showFilterCount]="true"\n  [autoSubmit]="false">\n\n  <ng-template let-query>\n\n    <div class="search-dropdown border-top m-2">\n\n        ...\n\n        <hr/>\n\n        <div class="small fw-bold mb-1 ms-3 me-auto">Advanced Search Form:</div>\n        \x3c!-- The new advanced search form you have just created ! --\x3e\n        <sq-advanced-form\n            [query]="query"\n            (filterEdit)="onFiltersChange()">\n        </sq-advanced-form>\n\n        ...\n\n    </div>\n\n  </ng-template>\n\n</sq-search-form>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(96540);const d={},r=s.createContext(d);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);