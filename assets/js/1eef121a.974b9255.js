"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1419],{31577:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var n=a(74848),s=a(28453);const i={layout:"default",title:"Dashboard Module",parent:"Analytics",grand_parent:"Libraries",nav_order:10},r="Dashboard Module",d={id:"libraries/analytics/dashboard",title:"Dashboard Module",description:"This module is an integration of the angular-gridster2 library.",source:"@site/docs/libraries/analytics/dashboard.md",sourceDirName:"libraries/analytics",slug:"/libraries/analytics/dashboard",permalink:"/sba-angular/docs/libraries/analytics/dashboard",draft:!1,unlisted:!1,editUrl:"https://github.com/sinequa/sba-angular/tree/main/docs/libraries/analytics/dashboard.md",tags:[],version:"current",frontMatter:{layout:"default",title:"Dashboard Module",parent:"Analytics",grand_parent:"Libraries",nav_order:10},sidebar:"tutorialSidebar",previous:{title:"AG Grid Module",permalink:"/sba-angular/docs/libraries/analytics/ag-grid"},next:{title:"Finance Module",permalink:"/sba-angular/docs/libraries/analytics/finance"}},o={},l=[{value:"Features",id:"features",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Sizing",id:"sizing",level:3},{value:"Persistence",id:"persistence",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"dashboard-module",children:"Dashboard Module"}),"\n",(0,n.jsxs)(t.p,{children:["This module is an integration of the ",(0,n.jsx)(t.a,{href:"https://tiberiuzuld.github.io/angular-gridster2/",children:(0,n.jsx)(t.strong,{children:"angular-gridster2"})})," library."]}),"\n",(0,n.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,n.jsxs)(t.p,{children:["The module exports a component that takes in a list of widget configurations and displays these widgets within the ",(0,n.jsx)(t.code,{children:"gridster"})," component. The component handles common operations such as resizing, adding & removing, renaming, and reordering widgets."]}),"\n",(0,n.jsxs)(t.p,{children:["The usage of this component is illustrated in the ",(0,n.jsx)(t.a,{href:"/sba-angular/docs/apps/pepper",children:"Pepper"})," application."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Pepper dashboard",src:a(6516).A+"",width:"1511",height:"858"})}),"\n",(0,n.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,n.jsxs)(t.p,{children:["Import the standalone dashboard component in your ",(0,n.jsx)(t.code,{children:"app.module.ts"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import { DashboardComponent } from '@sinequa/analytics/dashboard';\n\n@NgModule({\n  imports: [\n    ...\n    DashboardComponent\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This component is internationalized: If not already the case, you need to import its messages for the language(s) of your application. For example, in your app's ",(0,n.jsx)(t.code,{children:"src/locales/en.ts"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:'...\nimport {enDashboard} from "@sinequa/analytics/dashboard";\n\nconst messages = Utils.merge({}, ..., enDashboard, appMessages);\n'})}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"sq-dashboard"})," component can be used with this minimal setup:"]}),"\n",(0,n.jsx)("doc-dashboard",{}),"\n",(0,n.jsx)(t.p,{children:"Notice that you can drag and drop the widgets by clicking on the card header."}),"\n",(0,n.jsxs)(t.p,{children:["In a more typical usage, widgets have a different ",(0,n.jsx)(t.code,{children:"type"})," property that is used to determine what to display."]}),"\n",(0,n.jsx)(t.p,{children:"For example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:'<ng-template let-widget>\n  <div class="card h-100">\n    <div class="card-header">{{widget.title}}</div>\n    <div class="card-body" [ngSwitch]="widget.state.type">\n      <span *ngSwitchCase="foo">This is a "foo" widget</span>\n      <span *ngSwitchCase="bar">This is a "bar" widget</span>\n    </div>\n  </div>\n</ng-template>\n'})}),"\n",(0,n.jsxs)(t.p,{children:["It is also recommended to use the ",(0,n.jsx)(t.code,{children:"sq-facet-card"})," component from the ",(0,n.jsx)(t.a,{href:"/sba-angular/docs/libraries/components/facet",children:"Facet Module"}),' to encapsulate the widgets. This allows to display built-in "actions" to remove, rename and maximize the widgets:']}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:'<ng-template let-widget>\n  <sq-facet-card\n    [title]="widget.state.title"\n    [icon]="widget.icon"\n    [collapsible]="false"\n    [actions]="widget.actions"\n    [actionsFirst]="false"\n    [ngSwitch]="widget.state.type">\n    ...\n  </sq-facet-card>\n</ng-template>\n'})}),"\n",(0,n.jsxs)(t.p,{children:['Thanks to the facet-card API, many functionalities are supported out-of-the-box, like the display of the actions of the child "facet components" (marked with the ',(0,n.jsx)(t.code,{children:"#facet"})," template variable)."]}),"\n",(0,n.jsx)(t.p,{children:"Here is a more complete example with two different types of widgets and usage of the facet card:"}),"\n",(0,n.jsx)("doc-dashboard2",{}),"\n",(0,n.jsx)(t.h3,{id:"sizing",children:"Sizing"}),"\n",(0,n.jsxs)(t.p,{children:["Notice that the sizing of the each type of widget needs to be handled differently, based on whether the component takes all the available space or a fixed given size. The ",(0,n.jsx)(t.code,{children:"widget.width"})," and ",(0,n.jsx)(t.code,{children:"widget.height"})," properties are computed by the dashboard component and recomputed upon resize. The ",(0,n.jsx)(t.code,{children:"horizontalPadding"})," and ",(0,n.jsx)(t.code,{children:"verticalPadding"})," inputs allow to subtract the size of the border and header of the widget."]}),"\n",(0,n.jsx)(t.h3,{id:"persistence",children:"Persistence"}),"\n",(0,n.jsxs)(t.p,{children:["The widget configurations can be persisted in any storage system (including the browser local storage). Only the ",(0,n.jsx)(t.code,{children:"widget.state"})," should be persisted, as the other properties are computed by the dashboard component."]}),"\n",(0,n.jsx)(t.p,{children:"Therefore, storing the widget configuration could be done like this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"save(widgets.map(widget => widget.state));\n"})}),"\n",(0,n.jsx)(t.p,{children:"And restoring them with:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"widgets = load().map(state => ({\n  state,\n  maximizable: true,\n  removable: true,\n  otherProperties: computeFromState(state)\n}));\n"})}),"\n",(0,n.jsx)(t.p,{children:"(Notice that we avoid storing properties and data that are constant and/or can be re-computed from the state)"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},6516:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/pepper-8ef192e09ea02bd36170d223341e04d6.png"},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>d});var n=a(96540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);