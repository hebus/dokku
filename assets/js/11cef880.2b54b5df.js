"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3969],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||o;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},63406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={layout:"default",title:"Hello Search",parent:"Applications",nav_order:1},i="Hello Search",l={unversionedId:"apps/hello-search",id:"apps/hello-search",title:"Hello Search",description:"Hello Search is the simplest kind of Search-Based Application you can build with the SBA Framework. It is made of a single module and a single Angular component, which shows a search form and a list of results:",source:"@site/docs/apps/1-hello-search.md",sourceDirName:"apps",slug:"/apps/hello-search",permalink:"/dokku/docs/apps/hello-search",draft:!1,editUrl:"https://github.com/hebus/dokku/tree/main/docs/apps/1-hello-search.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{layout:"default",title:"Hello Search",parent:"Applications",nav_order:1},sidebar:"tutorialSidebar",previous:{title:"Applications",permalink:"/dokku/docs/apps/"},next:{title:"Vanilla Search",permalink:"/dokku/docs/apps/vanilla-search"}},s={},p=[{value:"App module",id:"app-module",level:2},{value:"App component",id:"app-component",level:2},{value:"Template",id:"template",level:3},{value:"Controller",id:"controller",level:3},{value:"Stylesheet",id:"stylesheet",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hello-search"},"Hello Search"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Hello Search")," is the simplest kind of Search-Based Application you can build with the SBA Framework. It is made of a single module and a single Angular component, which shows a search form and a list of results:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Hello Search",src:n(22028).Z,width:"1051",height:"451"})),(0,r.kt)("h2",{id:"app-module"},"App module"),(0,r.kt)("p",null,"Hello Search has one Angular module (",(0,r.kt)("inlineCode",{parentName:"p"},"AppModule"),") in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.module.ts"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.module.ts")),". It looks very much like the default ",(0,r.kt)("inlineCode",{parentName:"p"},"app.module.ts")," you would get from creating a new Angular app with ",(0,r.kt)("inlineCode",{parentName:"p"},"ng new"),", with some specific points:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We import required modules from ",(0,r.kt)("a",{parentName:"li",href:"/dokku/docs/libraries/core/"},(0,r.kt)("inlineCode",{parentName:"a"},"@sinequa/core"))," and pass them configuration via their ",(0,r.kt)("inlineCode",{parentName:"li"},"forRoot()")," methods."),(0,r.kt)("li",{parentName:"ul"},"In particular we must pass the ",(0,r.kt)("inlineCode",{parentName:"li"},"StartConfig")," object to the ",(0,r.kt)("inlineCode",{parentName:"li"},"WebServicesModule"),". This object contains the ",(0,r.kt)("strong",{parentName:"li"},"URL of the sinequa server")," (which can be omitted when the app is hosted on the server) and the ",(0,r.kt)("strong",{parentName:"li"},"name of the App")," configured in the Sinequa administration."),(0,r.kt)("li",{parentName:"ul"},"We use ",(0,r.kt)("inlineCode",{parentName:"li"},"{provide: LocationStrategy, useClass: HashLocationStrategy},")," to manage routes (which is not specific to Hello Search).")),(0,r.kt)("h2",{id:"app-component"},"App component"),(0,r.kt)("p",null,"Hello Search has one Angular component (",(0,r.kt)("inlineCode",{parentName:"p"},"AppComponent"),"). It is made of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A template: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.component.html"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.component.html"))),(0,r.kt)("li",{parentName:"ul"},"A controller: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.component.ts"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.component.ts"))),(0,r.kt)("li",{parentName:"ul"},"A stylesheet: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.component.scss"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.component.scss")))),(0,r.kt)("h3",{id:"template"},"Template"),(0,r.kt)("p",null,"The template (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.component.html"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.component.html")),") is divided in four parts:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Search Form"),":"),(0,r.kt)("p",null,"The search form has a search field ",(0,r.kt)("inlineCode",{parentName:"p"},"<input>"),', and two buttons ("Search" and "Clear"). When submitting the form, the ',(0,r.kt)("inlineCode",{parentName:"p"},"search()")," method from the controller is called. Note that the form is deactivated if the user is not logged in."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form novalidate [formGroup]="form">\n    <input type="text" placeholder="Enter search terms..." formControlName="search" spellcheck="false" autocomplete="off" [attr.disabled]="!loginService.complete? \'\' : null">\n    <button type="submit" (click)="search()" [attr.disabled]="!loginService.complete? \'\' : null">Search</button>\n    <button *ngIf="results$ | async" type="button" (click)="clear()">Clear</button>\n</form>\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Results"),":"),(0,r.kt)("p",null,"The results list displays the list of ",(0,r.kt)("inlineCode",{parentName:"p"},"Record")," objects from a ",(0,r.kt)("inlineCode",{parentName:"p"},"Results")," object provided by the controller. The first ",(0,r.kt)("inlineCode",{parentName:"p"},"*ngIf")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"| async")," allow to display the results only when they become available (it is ",(0,r.kt)("em",{parentName:"p"},"asynchronous"),", since the server cannot respond instantaneously). Then, the ",(0,r.kt)("inlineCode",{parentName:"p"},"*ngFor")," iterates through the list of results. Inside this ",(0,r.kt)("inlineCode",{parentName:"p"},"<div>"),", we then display the title, source and relevant extracts of each document."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div *ngIf="results$ | async; let results">\n    <hr>\n    <div *ngFor="let record of results.records" class="record">\n        <a href="{{record.url1}}">\n            <h3 [innerHtml]="record.displayTitle || record.title"></h3>\n        </a>\n        <div class="source">{{record.url1}}</div>\n        <p *ngIf="record.relevantExtracts" [innerHTML]="record.relevantExtracts"></p>\n    </div>\n</div>\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Login/Logout buttons"),":"),(0,r.kt)("p",null,"These buttons call the ",(0,r.kt)("inlineCode",{parentName:"p"},"login()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"logout()")," methods of the controller."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<button *ngIf="loginService.complete" type="button" (click)="logout()">Logout</button>\n<button *ngIf="!loginService.complete" type="button" (click)="login()">Login</button>\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notifications"),":"),(0,r.kt)("p",null,"Notifications are typically some error messages coming from the Sinequa services and managed by the ",(0,r.kt)("inlineCode",{parentName:"p"},"NotificationModule")," from ",(0,r.kt)("a",{parentName:"p",href:"/dokku/docs/libraries/core/"},(0,r.kt)("inlineCode",{parentName:"a"},"@sinequa/core")),". If you fail to log in or to get data from the Sinequa indexes, you will likely see a message displayed at the bottom of the app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<ng-container *ngIf="notificationsService.notificationsStream | async as notification">\n    <hr>\n    <div *ngIf="deleteNotification(notification)" class="notification">\n        <div *ngIf="notification.title" class="title">\n            <span>{{notification.title | sqMessage}}</span>\n            <hr>\n        </div>\n        <div>{{notification.text | sqMessage:{values: notification.params} }}</div>\n    </div>\n</ng-container>\n')),(0,r.kt)("h3",{id:"controller"},"Controller"),(0,r.kt)("p",null,"The controller (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.component.ts"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.component.ts")),") consists of the class ",(0,r.kt)("inlineCode",{parentName:"p"},"AppComponent"),", which is made of the main following parts:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Fields"),":"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"AppComponent")," class has the following fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"searchControl"),": An Angular ",(0,r.kt)("a",{parentName:"li",href:"https://angular.io/api/forms/UntypedFormControl"},(0,r.kt)("inlineCode",{parentName:"a"},"UntypedFormControl"))," object used to handle the search input value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"form"),": An Angular ",(0,r.kt)("a",{parentName:"li",href:"https://angular.io/api/forms/UntypedFormGroup"},(0,r.kt)("inlineCode",{parentName:"a"},"UntypedFormGroup"))," object needed to interact with the content of a ",(0,r.kt)("inlineCode",{parentName:"li"},"<form>"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"results$"),": An ",(0,r.kt)("a",{parentName:"li",href:"https://angular.io/guide/observables"},"rxjs Observable")," of ",(0,r.kt)("inlineCode",{parentName:"li"},"Results")," (since results are retrieved asynchronously) which can also be undefined.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"searchControl: UntypedFormControl;\nform: UntypedFormGroup;\nresults$: Observable<Results> | undefined;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constructor"),":"),(0,r.kt)("p",null,"In the constructor, we inject the following services from ",(0,r.kt)("a",{parentName:"p",href:"/dokku/docs/libraries/core/"},(0,r.kt)("inlineCode",{parentName:"a"},"@sinequa/core"))," (and initialize our ",(0,r.kt)("inlineCode",{parentName:"p"},"form"),"):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LoginService"),": Service in charge of authentication and initialization of other services."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AppService"),": Service in charge of retrieving the configuration of your application from the Sinequa server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QueryWebService"),": Service in charge of sending ",(0,r.kt)("em",{parentName:"li"},"queries")," and retrieving ",(0,r.kt)("em",{parentName:"li"},"results")," from the Sinequa server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"NotificationsService"),": Service in charge of centralizing errors and warnings from other services.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'constructor(\n    protected formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public appService: AppService,\n    public queryWebService: QueryWebService,\n    public notificationsService: NotificationsService) {\n\n    this.searchControl = new UntypedFormControl("");\n    this.form = this.formBuilder.group({\n        search: this.searchControl\n    });\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Search method"),":"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"search()"),' method is called when the user clicks on the "search" button. It performs the following tasks:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a new ",(0,r.kt)("inlineCode",{parentName:"li"},"Query")," object (with the right name, retrieved from the app configuration."),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("inlineCode",{parentName:"li"},"query.text")," to the value typed by the user in the search form (",(0,r.kt)("inlineCode",{parentName:"li"},"this.searchControl.value"),")."),(0,r.kt)("li",{parentName:"ul"},"Send the query to the ",(0,r.kt)("inlineCode",{parentName:"li"},"QueryWebService")," and get the results observable (",(0,r.kt)("inlineCode",{parentName:"li"},"results$"),"). When results are available (asynchronously), the template will display them.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'search() {\n    const ccquery = this.appService.ccquery;\n    const query = new Query(ccquery ? ccquery.name : "_unknown");\n    query.text = this.searchControl.value || "";\n    this.results$ = this.queryWebService.getResults(query);\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Login and Logout method"),":"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"login()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"logout()")," methods are essentially proxies to the corresponding methods in the ",(0,r.kt)("inlineCode",{parentName:"p"},"LoginService")," which manages the authentication. Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"LoginService")," also takes care of retrieving data from the server via three services:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"AppWebService"),", which retrieves the configuration of the applications."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"PrincipalWebService"),", which retrieves the user data from its domain (it includes the name, email, id, and other data)."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"UserSettingsWebService"),", which retrieves the ",(0,r.kt)("em",{parentName:"li"},"User Settings")," (more information in the ",(0,r.kt)("a",{parentName:"li",href:"/dokku/docs/tutorial/user-settings"},"Tutorial")," and the ",(0,r.kt)("a",{parentName:"li",href:"/dokku/docs/tipstricks/user-settings"},"Tips & Tricks"),")")),(0,r.kt)("p",null,"Additionally, we clear the results on log out, by removing the ",(0,r.kt)("inlineCode",{parentName:"p"},"results$")," and emptying the search form."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'clear() {\n    this.results$ = undefined;\n    this.searchControl.setValue("");\n}\n\nlogin() {\n    this.loginService.login();\n}\n\nlogout() {\n    this.clear();\n    this.loginService.logout();\n}\n')),(0,r.kt)("h3",{id:"stylesheet"},"Stylesheet"),(0,r.kt)("p",null,"The component's stylesheet (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/app/app.component.scss"},(0,r.kt)("inlineCode",{parentName:"a"},"src/app/app.component.scss")),") contains CSS rules applied only within the component. In particular:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Page layout rules, making our search results more readable:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".search {\n    max-width: 800px;\n    margin-left: 100px;\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Text sizing, coloring and spacing for the title (",(0,r.kt)("inlineCode",{parentName:"p"},"h1"),"), document title (",(0,r.kt)("inlineCode",{parentName:"p"},"h3"),"), document source (",(0,r.kt)("inlineCode",{parentName:"p"},".source"),") and relevant extracts (",(0,r.kt)("inlineCode",{parentName:"p"},"p"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Styling of the ",(0,r.kt)("em",{parentName:"p"},"notifications"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".notification {\n    border: solid;\n    padding: 8px;\n\n    .title {\n        font-weight: bold;\n    }\n}\n")))),(0,r.kt)("p",null,"In addition to the component's stylesheet, a global stylesheet (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sinequa/sba-angular/blob/master/projects/hello-search/src/styles/app.scss"},(0,r.kt)("inlineCode",{parentName:"a"},"src/styles/app.scss")),") contains styles that apply to the whole app. This is where you would import (globally) third party styling libraries such as Bootstrap (see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/search-module#importing-bootstrap"},"tutorial"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},'@import "~@angular/cdk/overlay-prebuilt";\n\nbody {\n    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;\n}\n\na {\n    text-decoration: none;\n    color: #3434d6;\n}\n\n.record .match-highlight {\n    font-weight: bold;\n    font-style: italic;\n}\n')))}m.isMDXComponent=!0},22028:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/hello-search-2875aa9bcb38f7bc17ee5c564ab63763.png"}}]);